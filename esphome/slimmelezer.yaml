substitutions:
  device_name: slimmelezer
  device_description: "DIY P1 module to read your smart meter"

esphome:
  name: ${device_name}
  comment: "${device_description}"
  platform: ESP8266
  esp8266_restore_from_flash: true
  board: d1_mini
  name_add_mac_suffix: false
  project:
    name: zuidwijk.slimmelezer
    version: "1.0"
  on_boot:
    then:
      - lambda: |-
          if (isnan(id(voltage_l1).state)) {  id(voltage_l1).publish_state(0.0); }
          if (isnan(id(voltage_l2).state)) {  id(voltage_l2).publish_state(0.0); }
          if (isnan(id(voltage_l3).state)) {  id(voltage_l3).publish_state(0.0); }
          if (isnan(id(current_l1).state)) {  id(current_l1).publish_state(0.0); }
          if (isnan(id(current_l2).state)) {  id(current_l2).publish_state(0.0); }
          if (isnan(id(current_l3).state)) {  id(current_l3).publish_state(0.0); }
          if (isnan(id(power_delivered_l1).state)) {  id(power_delivered_l1).publish_state(0.0); }
          if (isnan(id(power_delivered_l2).state)) {  id(power_delivered_l2).publish_state(0.0); }
          if (isnan(id(power_delivered_l3).state)) {  id(power_delivered_l3).publish_state(0.0); }
          if (isnan(id(power_returned_l1).state)) {  id(power_returned_l1).publish_state(0.0); }
          if (isnan(id(power_returned_l2).state)) {  id(power_returned_l2).publish_state(0.0); }
          if (isnan(id(power_returned_l3).state)) {  id(power_returned_l3).publish_state(0.0); }

wifi:
  ssid: !secret wifi_iot_ssid
  password: !secret wifi_iot_password
  fast_connect: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name}
    ap_timeout: 15s

captive_portal:

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:
  password: !secret esphome_ota_password

web_server:
  port: 80

uart:
  baud_rate: 115200
  rx_pin: D7
  rx_buffer_size: 1500

dsmr:

sensor:
  - platform: dsmr
    energy_delivered_tariff1:
      id: energy_delivered_tariff1
      name: "Energy Consumed Tariff 1"
      state_class: total_increasing
    energy_delivered_tariff2:
      id: energy_delivered_tariff2
      name: "Energy Consumed Tariff 2"
      state_class: total_increasing
    energy_returned_tariff1:
      id: energy_returned_tariff1
      name: "Energy Produced Tariff 1"
      state_class: total_increasing
    energy_returned_tariff2:
      id: energy_returned_tariff2
      name: "Energy Produced Tariff 2"
      state_class: total_increasing
    power_delivered:
      name: "Power Consumed"
      accuracy_decimals: 3
    power_returned:
      name: "Power Produced"
      accuracy_decimals: 3
    electricity_failures:
      name: "Electricity Failures"
      icon: mdi:alert
    electricity_long_failures:
      name: "Long Electricity Failures"
      icon: mdi:alert
    voltage_l1:
      id: voltage_l1
      name: "Voltage Phase 1"
    voltage_l2:
      id: voltage_l2
      name: "Voltage Phase 2"
    voltage_l3:
      id: voltage_l3
      name: "Voltage Phase 3"
    current_l1:
      id: current_l1
      name: "Current Phase 1"
    current_l2:
      id: current_l2
      name: "Current Phase 2"
    current_l3:
      id: current_l3
      name: "Current Phase 3"
    power_delivered_l1:
      id: power_delivered_l1
      name: "Power Consumed Phase 1"
      accuracy_decimals: 3
    power_delivered_l2:
      id: power_delivered_l2
      name: "Power Consumed Phase 2"
      accuracy_decimals: 3
    power_delivered_l3:
      id: power_delivered_l3
      name: "Power Consumed Phase 3"
      accuracy_decimals: 3
    power_returned_l1:
      id: power_returned_l1
      name: "Power Produced Phase 1"
      accuracy_decimals: 3
    power_returned_l2:
      id: power_returned_l2
      name: "Power Produced Phase 2"
      accuracy_decimals: 3
    power_returned_l3:
      id: power_returned_l3
      name: "Power Produced Phase 3"
      accuracy_decimals: 3
    # gas_delivered:
    #   name: "Gas Consumed"
    #   state_class: total_increasing
    # gas_delivered_be:
    #   name: "Gas Consumed Belgium"
    #   state_class: total_increasing
  - platform: template
    name: "Energy Consumed"
    state_class: total_increasing
    unit_of_measurement: "kWh"
    device_class: energy
    update_interval: 5s
    lambda: |-
      return (id(energy_delivered_tariff1).state + id(energy_delivered_tariff2).state);
  - platform: template
    name: "Energy Produced"
    state_class: total_increasing
    unit_of_measurement: "kWh"
    device_class: energy
    update_interval: 5s
    lambda: |-
      return (id(energy_returned_tariff1).state + id(energy_returned_tariff2).state);
  - platform: template
    name: "Current"
    state_class: measurement
    unit_of_measurement: "A"
    device_class: current
    update_interval: 5s
    lambda: |-
      return (id(current_l1).state + id(current_l2).state + id(current_l3).state);
  - platform: uptime
    name: "SlimmeLezer Uptime"
  - platform: wifi_signal
    name: "SlimmeLezer Wi-Fi Signal"
    update_interval: 60s

text_sensor:
  - platform: dsmr
    electricity_tariff:
      name: "Tariff"
    identification:
      name: "DSMR Identification"
    p1_version_be:
      name: "DSMR Version Belgium"
  - platform: wifi_info
    ip_address:
      name: "SlimmeLezer IP Address"
    ssid:
      name: "SlimmeLezer Wi-Fi SSID"
    bssid:
      name: "SlimmeLezer Wi-Fi BSSID"
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true
